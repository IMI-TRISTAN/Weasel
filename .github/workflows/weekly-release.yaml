name: Create Weekly Weasel Release
on:
  schedule:
    - cron: "0 12 * * 5" #runs at 12:00 UTC every Friday
  push:
    branches:
      - "master"

jobs:
  release:
    runs-on: ubuntu-latest
    outputs:
      upload_artifact: ${{ steps.create_release.outputs.upload_url }}
      date_string: ${{ steps.date.outputs.date }}
      changelog_text: ${{steps.changelog.outputs.changelog}}

    steps:
      - uses: actions/checkout@v2
      - name: Get current date
        id: date
        run: echo "::set-output name=date::$(date +'%Y%m%d')"
  
      - name: Build Changelog
        id: changelog
        uses: metcalfc/changelog-generator@v1.0.0
        with:
          myToken: ${{ secrets.GITHUB_TOKEN }}
  
      - name: Create the Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This token is provided by Actions, you do not need to create your own token
        with:
          tag_name: v${{ github.run_number }}_${{ github.sha }}
          release_name: Weasel ${{ steps.date.outputs.date }}
          body: |
            **Weekly Release:** ${{ steps.date.outputs.date }}
            **Full Changelog:** ${{steps.changelog.outputs.changelog}}
          draft: false
          prerelease: false

  build:
    runs-on: ${{ matrix.os }}
    needs: release
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]

    steps:
      - uses: actions/checkout@v2
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.7' # install the python version needed
          
      - name: Install Python Packages
        run: |
          python -m pip install --upgrade pip

      - name: Generate the Executable for Windows
        if: ${{ matrix.os == 'windows-latest'}}
        run: |
          python create_weasel_executable.py

      - name: Generate the Executable for MacOS/Linux
        if: ${{ matrix.os == 'ubuntu-latest' || matrix.os == 'macos-latest'}}
        run: |
          sudo python create_weasel_executable.py

      - name: Zip the output files for Windows
        uses: papeloto/action-zip@v1
        if: ${{ matrix.os == 'windows-latest'}}
        with:
          files: Weasel.exe config.xml
          dest: pyinstaller_output.zip

      - name: Compress the output files for MacOS/Linux
        if: ${{ matrix.os == 'ubuntu-latest' || matrix.os == 'macos-latest'}}
        run: |
          tar -czvf pyinstaller_output.tar.gz Weasel config.xml
          
      - name: Upload the zipped Windows executable to the Release
        uses: actions/upload-release-asset@v1
        if: ${{ matrix.os == 'windows-latest'}}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This token is provided by Actions, you do not need to create your own token
        with:
          upload_url: ${{ needs.release.outputs.upload_artifact }}
          asset_path: ./pyinstaller_output.zip
          asset_name: ${{ needs.release.outputs.date_string }}-weasel-${{ matrix.os }}.zip
          asset_content_type: application/zip

      - name: Upload the compressed MacOS/Linux executable to the Release
        uses: actions/upload-release-asset@v1
        if: ${{ matrix.os == 'ubuntu-latest' || matrix.os == 'macos-latest'}}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This token is provided by Actions, you do not need to create your own token
        with:
          upload_url: ${{ needs.release.outputs.upload_artifact }}
          asset_path: ./pyinstaller_output.tar.gz
          asset_name: ${{ needs.release.outputs.date_string }}-weasel-${{ matrix.os }}.tar.gz
          asset_content_type: application/zip